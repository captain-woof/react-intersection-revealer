{"version":3,"sources":["../../src/index.js","styles/indexContainerStyle.js","styles/indexTextStyle.js","styles/indexTextStyle2.js","styles/indexBoxStyle.js","styles/globalStyle.js","styles/indexHeaderStyle.js","styles/mousePointerStyle.js","components/mousePointer.js","App.js","index.js"],"names":["isElementInView","targetElement","boundBox","window","getEleVisibleX","Math","getEleVisibleY","getHeightWidthAndVisible","heightVisible","widthVisible","width","getNewWidthHeight","height","getXY","x","y","top","getScrollYAndProgress","scrollY","scrollYProgress","getScrollXAndProgress","scrollX","scrollXProgress","handleChange","ref","setHeight","setwidth","setInView","setVisibleFractionX","setVisibleFractionY","setHeightVisible","setwidthVisible","setX","setY","setScrollX","setScrollXProgress","setScrollY","setScrollYProgress","useIntersectionRevealer","useState","inView","visibleFractionX","visibleFractionY","initialScrollY","initialScrollYProgress","initialScrollX","initialScrollXProgress","useEffect","onChange","useCallback","IndexContainerStyle","styled","div","bgColor","IndexTextStyle","h1","IndexTextStyle2","IndexBoxStyle","GlobalStyle","createGlobalStyle","PackageNameText","ButtonContainer","Button","a","IndexHeaderStyle","MouseStyle","vanish","css","MousePointer","innerWidth","innerHeight","handleMouseMove","e","pageX","pageY","document","addEventListener","removeEventListener","style","left","App","boxRef","useRef","showStats","setShowStats","allowShowingStats","setVanish","refContainer","console","log","onMouseEnter","onMouseLeave","href","target","round","ReactDOM","render","getElementById"],"mappings":"6QAGMA,EAAkB,SAACC,GACrB,MACI,SAEJ,IAAIC,EAAWD,EAAf,wBACA,OAASC,MAAeC,OAAhB,aAAwCD,OAAgBC,OAAxD,YAA+ED,UAAvF,GAGEE,EAAiB,SAACH,GACpB,MACI,YAEJ,IAAIC,EAAWD,EAAf,wBACA,OAAKD,EAAL,GAEYE,SAAkBC,OAAnB,YAA0CD,SAA1C,GAAmEA,QAAiBC,OAApF,YAA2GD,QAA/G,EACH,EAEOG,UACDF,kBAAoBD,EAArB,MAAsCA,EADpCG,MAEFH,QAAiBA,EAFtB,OAJA,GAWFI,EAAiB,SAACL,GACpB,MACI,YAEJ,IAAIC,EAAWD,EAAf,wBACA,OAAKD,EAAL,GAEYE,UAAmBC,OAApB,aAA4CD,UAA5C,GAAsEA,OAAgBC,OAAtF,aAA8GD,OAAlH,EACH,EAEOG,UACDF,mBAAqBD,EAAtB,KAAsCA,EADpCG,OAEFH,SAAkBA,EAFvB,QAJA,GAWFK,EAA2B,SAACN,GAC9B,MACI,MAAQ,CACJO,cADI,KAEJC,aAAc,MAItB,IAAIP,EAAWD,EAAf,wBACA,MAAQ,CACJO,cAAeF,KAAgCJ,EAD3C,OAEJO,aAAcL,KAAgCF,EAASQ,QAIzDC,EAAoB,SAACV,GACvB,MACI,MAAQ,CACJW,OADI,KAEJF,MAAO,MAIf,IAAIR,EAAWD,EAAf,wBACA,MAAQ,CACJW,OAAQV,EADJ,OAEJQ,MAAOR,EAASQ,QAIlBG,EAAQ,SAACZ,GACX,MACI,MAAO,CACHa,EADG,KAEHC,EAAG,MAIX,IAAIb,EAAWD,EAAf,wBACA,MAAO,CACHa,EAAGX,eAAiBD,EADjB,KAEHa,EAAGZ,eAAiBD,EAASc,MAI/BC,EAAwB,SAAChB,GAC3B,MACI,MAAO,CAAEiB,QAAF,KAAiBC,gBAAiB,MAG7C,IAAIjB,EAAWD,EAAf,wBACA,OAAKE,mBAAqBD,EAAtB,KAAyCC,mBAAqBD,EAAtB,KAAwCA,MAApF,EAGW,CAAEgB,QAAF,EAAcC,gBAAiB,GAC9BjB,OAAD,GAAwBA,UAA5B,EACI,CAAEgB,SAAUhB,EAAZ,IAA0BiB,iBAAoBjB,EAAF,IAAkBA,EAASU,QAEvE,CAAEM,QAAShB,EAAX,OAA4BiB,gBAAiB,IAItDC,EAAwB,SAACnB,GAC3B,MACI,MAAO,CAAEoB,QAAF,KAAiBC,gBAAiB,MAG7C,IAAIpB,EAAWD,EAAf,wBACA,OAAKE,kBAAoBD,EAArB,MAAyCC,kBAAoBD,EAArB,MAAwCA,OAApF,EAGW,CAAEmB,QAAF,EAAcC,gBAAiB,GAC9BpB,QAAD,GAAyBA,SAA7B,EACI,CAAEmB,SAAUnB,EAAZ,KAA2BoB,iBAAoBpB,EAAF,KAAmBA,EAASQ,OAEzE,CAAEW,QAASnB,EAAX,OAA4BoB,gBAAiB,IAKtDC,EAAe,SAACC,EAAKC,EAAWC,EAAUC,EAAWC,EAAqBC,EAAqBC,EAAkBC,EAAiBC,EAAMC,EAAMC,EAAYC,EAAoBC,EAAYC,GAC5LV,EAAU3B,EAAgBwB,EAA1BG,UACAC,EAAoBxB,EAAeoB,EAAnCI,UACAC,EAAoBvB,EAAekB,EAAnCK,UAEA,MAAsCtB,EAAyBiB,EAA/D,SAAMhB,EAAN,gBAAqBC,EAArB,eACAqB,KACAC,KAEA,MAAelB,EAAMW,EAArB,SAAMV,EAAN,IAASC,EAAT,IACAiB,KACAC,KAEA,MAAwBtB,EAAkBa,EAA1C,SAAMZ,EAAN,SAAcF,EAAd,QACAe,KACAC,KAEA,MAAmCT,EAAsBO,EAAzD,SAAMN,EAAN,UAAeC,EAAf,kBACAiB,KACAC,KAEA,MAAmCjB,EAAsBI,EAAzD,SAAMH,EAAN,UAAeC,EAAf,kBACAY,KACAC,MAISG,EAA0B,SAACd,GAGpC,MAA4Be,mBAASvC,EAAgBwB,EAArD,UAAOgB,EAAP,KAAeb,EAAf,KAEA,EAAgDY,mBAASnC,EAAeoB,EAAxE,UAAOiB,EAAP,KAAyBb,EAAzB,KAEA,EAAgDW,mBAASjC,EAAekB,EAAxE,UAAOkB,EAAP,KAAyBb,EAAzB,KAEA,EAA4BU,mBAAS5B,EAAkBa,EAAlBb,SAArC,QAAOC,EAAP,KAAea,EAAf,KACA,EAA0Bc,mBAAS5B,EAAkBa,EAAlBb,SAAnC,OAAOD,EAAP,KAAcgB,EAAd,KACA,EAA0Ca,mBAAShC,EAAyBiB,EAAzBjB,SAAnD,eAAOC,EAAP,KAAsBsB,EAAtB,KACA,EAAwCS,mBAAShC,EAAyBiB,EAAzBjB,SAAjD,cAAOE,EAAP,KAAqBsB,EAArB,KAEA,EAAkBQ,mBAAS1B,EAAMW,EAANX,SAA3B,GAAOC,EAAP,KAAUkB,EAAV,KACA,EAAkBO,mBAAS1B,EAAMW,EAANX,SAA3B,GAAOE,EAAP,KAAUkB,EAAV,KAEA,EAA2EhB,EAAsBO,EAAjG,SAAemB,EAAf,UAAgDC,EAAhD,kBACA,EAA8BL,mBAA9B,GAAOrB,EAAP,KAAgBkB,EAAhB,KACA,EAA8CG,mBAA9C,GAAOpB,EAAP,KAAwBkB,EAAxB,KAEA,EAA2EjB,EAAsBI,EAAjG,SAAeqB,EAAf,UAAgDC,EAAhD,kBACA,EAA8BP,mBAA9B,GAAOlB,EAAP,KAAgBa,EAAhB,KACA,EAA8CK,mBAA9C,GAAOjB,GAAP,KAAwBa,GAAxB,KAGAY,qBAAU,WACNxB,EAAaC,EAAKC,EAAWC,EAAUC,EAAWC,EAAqBC,EAAqBC,EAAkBC,EAAiBC,EAAMC,EAAMC,EAAYC,GAAoBC,EAA3Kb,KACD,CAACC,EAFJuB,UAKA,IAAMC,GAAWC,uBAAY,WACzB1B,EAAaC,EAAKC,EAAWC,EAAUC,EAAWC,EAAqBC,EAAqBC,EAAkBC,EAAiBC,EAAMC,EAAMC,EAAYC,GAAoBC,EAA3Kb,KACD,CAFH,IAuBA,OAlBAwB,qBAAU,WAEN,OADA5C,qCACO,WAAQA,2CAFnB4C,IAMAA,qBAAU,WAAM,MAEZ,OADA,UAAAvB,EAAA,6DACO,WAAM,MAAE,UAAAA,EAAA,mEAFnBuB,IAMAA,qBAAU,WAEN,OADA5C,qCACO,WAAQA,2CAFnB4C,IAMO,CACHP,OADG,EAEHC,iBAFG,EAGHC,iBAHG,EAIH9B,OAJG,EAKHF,MALG,EAMHF,cANG,EAOHC,aAPG,EAQHK,EARG,EASHC,EATG,EAUHM,QAVG,EAWHC,gBAXG,GAYHJ,QAZG,EAaHC,oB,cCzNK+B,EAAsBC,IAAOC,IAAV,8KACR,qBAAEC,SAAwB,YCDrCC,EAAiBH,IAAOI,GAAV,6PCAdC,EAAkBL,IAAOI,GAAV,8PCAfE,EAAgBN,IAAOC,IAAV,uICAbM,EAAcC,YAAH,uVCAXC,EAAkBT,IAAOC,IAAV,8MAUfS,EAAkBV,IAAOC,IAAV,yNAWfU,EAASX,IAAOY,EAAV,+WAiBNC,EAAmBb,IAAOC,IAAV,iPCtChBa,EAAad,IAAOC,IAAV,sXAWjB,qBAAGc,QAAwBC,YAAJ,wDCTd,SAASC,EAAT,GAAmC,IAAXF,EAAU,EAAVA,OAEnC,EAAkB3B,mBAASpC,OAAOkE,WAAa,GAA/C,mBAAOvD,EAAP,KAAUkB,EAAV,KACA,EAAkBO,mBAASpC,OAAOmE,YAAc,GAAhD,mBAAOvD,EAAP,KAAUkB,EAAV,KAEMsC,EAAkBtB,uBAAY,SAACuB,GACjCxC,EAAKwC,EAAEC,OACPxC,EAAKuC,EAAEE,SACR,IAOH,OALA3B,qBAAU,WAEN,OADA4B,SAASC,iBAAiB,YAAaL,GAChC,WAAQI,SAASE,oBAAoB,YAAaN,MAC1D,CAACA,IAGA,kBAACN,EAAD,CAAYC,OAAQA,EAAQY,MAAO,CAAE9D,IAAKD,EAAGgE,KAAMjE,KCN5C,SAASkE,IAEtB,IAAMC,EAASC,mBAGf,EAAwC5C,EAAwB2C,GAAxDzC,EAAR,EAAQA,OAAQhC,EAAhB,EAAgBA,cAAeM,EAA/B,EAA+BA,EAAGC,EAAlC,EAAkCA,EAGlC,EAAkCwB,oBAAS,GAA3C,mBAAO4C,EAAP,KAAkBC,EAAlB,KACMC,EAAoBpC,uBAAY,WACpCmC,GAAa,GACbjF,OAAO0E,oBAAoB,SAAUQ,KACpC,IACHtC,qBAAU,WACR5C,OAAOyE,iBAAiB,SAAUS,KACjC,CAACA,IACJtC,qBAAU,WACR5C,OAAOyE,iBAAiB,SAAUS,KACjC,CAACA,IAGJ,MAA4B9C,oBAAS,GAArC,mBAAO2B,EAAP,KAAeoB,EAAf,KAGMC,EAAeL,mBACb/D,EAAoBmB,EAAwBiD,GAA5CpE,gBAKR,OAJA4B,qBAAU,WACRyC,QAAQC,IAAItE,KACX,CAACA,IAGF,oCACE,kBAACuC,EAAD,MACA,kBAACU,EAAD,CAAcF,OAAQA,IACtB,kBAACF,EAAD,KACE,kBAACJ,EAAD,oCACA,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAQ4B,aAAc,WAAQJ,GAAU,IAASK,aAAc,WAAQL,GAAU,IAAUM,KAAK,8DAA8DC,OAAO,UAArK,UAGA,kBAAC/B,EAAD,CAAQ4B,aAAc,WAAQJ,GAAU,IAASK,aAAc,WAAQL,GAAU,IAAUM,KAAK,oFAAoFC,OAAO,UAA3L,YAMJ,kBAACvC,EAAD,KACG6B,EACG,oCACA,6BAAK,gDACL,oDAAsB9E,KAAKyF,MAAMhF,GAAjC,eAA0CT,KAAKyF,MAAM/E,GAArD,QACA,gDAAkByB,IAClB,uDAAyBnC,KAAKyF,MAAMtF,GAApC,QAEA,qGAIN,kBAACgD,EAAD,KACE,4DAA8BnD,KAAKyF,MAAwB,IAAlB3E,GAAzC,4BAGF,kBAAC+B,EAAD,CAAqB1B,IAAK+D,EAAclC,QAAQ,WAC9C,kBAACI,EAAD,CAAejC,IAAKyD,KAGtB,kBAAC/B,EAAD,OC5EN6C,IAASC,OAAO,kBAAChB,EAAD,MAASL,SAASsB,eAAe,W","file":"static/js/main.1765f2f4.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\n//// Functions to get visibility stats\nconst isElementInView = (targetElement) => {\n    if (!targetElement) { // If element is null\n        return false\n    }\n    let boundBox = targetElement.getBoundingClientRect()\n    return ((boundBox.top < window.innerHeight) && (boundBox.left < window.innerWidth) && (boundBox.bottom >= 0))\n}\n\nconst getEleVisibleX = (targetElement) => {\n    if (!targetElement) { // If element is null\n        return null\n    }\n    let boundBox = targetElement.getBoundingClientRect()\n    if (!isElementInView(targetElement)) {\n        return 0\n    } else if ((boundBox.right <= window.innerWidth) && (boundBox.right >= 0) && (boundBox.left <= window.innerWidth) && (boundBox.left >= 0)) {\n        return 1\n    } else {\n        return Math.min(\n            ((window.innerWidth - boundBox.left) / boundBox.width),\n            (boundBox.right / boundBox.width)\n        )\n    }\n}\n\nconst getEleVisibleY = (targetElement) => {\n    if (!targetElement) { // If element is null\n        return null\n    }\n    let boundBox = targetElement.getBoundingClientRect()\n    if (!isElementInView(targetElement)) {\n        return 0\n    } else if ((boundBox.bottom <= window.innerHeight) && (boundBox.bottom >= 0) && (boundBox.top <= window.innerHeight) && (boundBox.top >= 0)) {\n        return 1\n    } else {\n        return Math.min(\n            ((window.innerHeight - boundBox.top) / boundBox.height),\n            (boundBox.bottom / boundBox.height)\n        )\n    }\n}\n\nconst getHeightWidthAndVisible = (targetElement) => {\n    if (!targetElement) {\n        return ({\n            heightVisible: null,\n            widthVisible: null,\n        })\n    }\n\n    let boundBox = targetElement.getBoundingClientRect()\n    return ({\n        heightVisible: getEleVisibleY(targetElement) * boundBox.height,\n        widthVisible: getEleVisibleX(targetElement) * boundBox.width,\n    })\n}\n\nconst getNewWidthHeight = (targetElement) => {\n    if (!targetElement) {\n        return ({\n            height: null,\n            width: null\n        })\n    }\n\n    let boundBox = targetElement.getBoundingClientRect()\n    return ({\n        height: boundBox.height,\n        width: boundBox.width\n    })\n}\n\nconst getXY = (targetElement) => {\n    if (!targetElement) {\n        return {\n            x: null,\n            y: null\n        }\n    }\n\n    let boundBox = targetElement.getBoundingClientRect()\n    return {\n        x: window.scrollX + boundBox.left,\n        y: window.scrollY + boundBox.top\n    }\n}\n\nconst getScrollYAndProgress = (targetElement) => {\n    if (!targetElement) {\n        return { scrollY: null, scrollYProgress: null }\n    }\n\n    let boundBox = targetElement.getBoundingClientRect()\n    if ((window.innerHeight < boundBox.top) || ((window.innerHeight > boundBox.top) && (boundBox.top > 0))) {\n        // If target element has not been scrolled over yet\n        // OR, If target element is partially visible, coming from below\n        return { scrollY: 0, scrollYProgress: 0 }\n    } else if ((boundBox.top <= 0) && (boundBox.bottom >= 0)) { // If target element is partially visible, going above\n        return { scrollY: -boundBox.top, scrollYProgress: ((-boundBox.top) / boundBox.height) }\n    } else { // Element has been fully scrolled over\n        return { scrollY: boundBox.height, scrollYProgress: 1 }\n    }\n}\n\nconst getScrollXAndProgress = (targetElement) => {\n    if (!targetElement) {\n        return { scrollX: null, scrollXProgress: null }\n    }\n\n    let boundBox = targetElement.getBoundingClientRect()\n    if ((window.innerWidth < boundBox.left) || ((window.innerWidth > boundBox.left) && (boundBox.left > 0))) {\n        // If target element has not been scrolled over yet\n        // OR, If target element is partially visible, coming from below\n        return { scrollX: 0, scrollXProgress: 0 }\n    } else if ((boundBox.left <= 0) && (boundBox.right >= 0)) { // If target element is partially visible, going above\n        return { scrollX: -boundBox.left, scrollXProgress: ((-boundBox.left) / boundBox.width) }\n    } else { // Element has been fully scrolled over\n        return { scrollX: boundBox.height, scrollXProgress: 1 }\n    }\n}\n\n// Handles changes in target element such as transitions, or when page scrolls\nconst handleChange = (ref, setHeight, setwidth, setInView, setVisibleFractionX, setVisibleFractionY, setHeightVisible, setwidthVisible, setX, setY, setScrollX, setScrollXProgress, setScrollY, setScrollYProgress) => {\n    setInView(isElementInView(ref.current))\n    setVisibleFractionX(getEleVisibleX(ref.current))\n    setVisibleFractionY(getEleVisibleY(ref.current))\n\n    let { heightVisible, widthVisible } = getHeightWidthAndVisible(ref.current)\n    setHeightVisible(heightVisible)\n    setwidthVisible(widthVisible)\n\n    let { x, y } = getXY(ref.current)\n    setX(x)\n    setY(y)\n\n    let { height, width } = getNewWidthHeight(ref.current)\n    setHeight(height)\n    setwidth(width)\n\n    let { scrollY, scrollYProgress } = getScrollYAndProgress(ref.current)\n    setScrollY(scrollY)\n    setScrollYProgress(scrollYProgress)\n\n    let { scrollX, scrollXProgress } = getScrollXAndProgress(ref.current)\n    setScrollX(scrollX)\n    setScrollXProgress(scrollXProgress)\n}\n\n// Below function takes the ref to the element/component that needs to be tracked\nexport const useIntersectionRevealer = (ref) => {\n    //// States for tracking data\n    // stores element visibility (boolean)\n    const [inView, setInView] = useState(isElementInView(ref.current))\n    // Stores y-axis visibility (fraction)\n    const [visibleFractionX, setVisibleFractionX] = useState(getEleVisibleX(ref.current))\n    // Stores y-axis visibility (fraction)\n    const [visibleFractionY, setVisibleFractionY] = useState(getEleVisibleY(ref.current))\n    // Stores height and width, and their absolute visibility\n    const [height, setHeight] = useState(getNewWidthHeight(ref.current).height)\n    const [width, setwidth] = useState(getNewWidthHeight(ref.current).width)\n    const [heightVisible, setHeightVisible] = useState(getHeightWidthAndVisible(ref.current).heightVisible)\n    const [widthVisible, setwidthVisible] = useState(getHeightWidthAndVisible(ref.current).widthVisible)\n    // Stores targetElement's x,y\n    const [x, setX] = useState(getXY(ref.current).x)\n    const [y, setY] = useState(getXY(ref.current).y)\n    // Stores scroll progress\n    let { scrollY: initialScrollY, scrollYProgress: initialScrollYProgress } = getScrollYAndProgress(ref.current)\n    const [scrollY, setScrollY] = useState(initialScrollY)\n    const [scrollYProgress, setScrollYProgress] = useState(initialScrollYProgress)\n\n    let { scrollX: initialScrollX, scrollXProgress: initialScrollXProgress } = getScrollXAndProgress(ref.current)\n    const [scrollX, setScrollX] = useState(initialScrollX)\n    const [scrollXProgress, setScrollXProgress] = useState(initialScrollXProgress)\n\n    // Sets initial stats when Target element renders (is not null)\n    useEffect(() => {\n        handleChange(ref, setHeight, setwidth, setInView, setVisibleFractionX, setVisibleFractionY, setHeightVisible, setwidthVisible, setX, setY, setScrollX, setScrollXProgress, setScrollY, setScrollYProgress)\n    }, [ref.current])\n\n    //// Function that invokes change handler\n    const onChange = useCallback(() => {\n        handleChange(ref, setHeight, setwidth, setInView, setVisibleFractionX, setVisibleFractionY, setHeightVisible, setwidthVisible, setX, setY, setScrollX, setScrollXProgress, setScrollY, setScrollYProgress)\n    }, [ref])\n\n    //// Hook on to window scroll event\n    useEffect(() => {\n        window.addEventListener('scroll', onChange)\n        return () => { window.removeEventListener('scroll', onChange) }\n    }, [])\n\n    //// Hook on to targetElement's transition\n    useEffect(() => {\n        ref.current?.addEventListener('transitionend', onChange)\n        return () => { ref.current?.removeEventListener('transitionend', onChange) }\n    }, [])\n\n    //// Hook on to window resize\n    useEffect(() => {\n        window.addEventListener('resize', onChange)\n        return () => { window.removeEventListener('resize', onChange) }\n    }, [])\n\n    //// Return stats\n    return {\n        inView,\n        visibleFractionX,\n        visibleFractionY,\n        height,\n        width,\n        heightVisible,\n        widthVisible,\n        x,\n        y,\n        scrollX,\n        scrollXProgress,\n        scrollY,\n        scrollYProgress\n    }\n}","import styled from 'styled-components'\n\nexport const IndexContainerStyle = styled.div`\n    background-color: ${({bgColor}) => bgColor || 'yellow'};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 140vh;\n    width: 100%;\n`","import styled from 'styled-components'\n\nexport const IndexTextStyle = styled.h1`\n    font-size: 2.5rem;\n    color: black;\n    font-weight: 400;\n    background-color: transparent;\n    position: fixed;\n    top: 45vh;\n    left: 32px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n`","import styled from 'styled-components'\n\nexport const IndexTextStyle2 = styled.h1`\n    font-size: 2.5rem;\n    color: black;\n    font-weight: 400;\n    background-color: transparent;\n    position: fixed;\n    top: 15vh;\n    right: 32px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n`","import styled from 'styled-components'\n\nexport const IndexBoxStyle = styled.div`\n    height: 280px;\n    width: 280px;\n    background-color: black;\n    transform: translate(0px, 60vh);\n`","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0;\n        padding: 0;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-rendering: optimizeLegibility;\n        font-size: 16px;\n        font-family: 'Lato', sans-serif;\n        user-select: none;\n        cursor: none;\n    }\n`","import styled from 'styled-components'\n\nexport const PackageNameText = styled.div`\n    color: black;\n    font-size: 1.2rem;\n    font-weight: 400;\n    font-style: italic;\n    align-self: center;\n    border-bottom: 2px solid black;\n    margin-right: 2rem;\n`\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    color: black;\n    font-size: 1rem;    \n    flex-grow: 1;\n    text-align: end;\n    justify-content: flex-end;\n    margin-right: 3rem;\n`\n\nexport const Button = styled.a`    \n    border-radius: 4px;\n    padding: 4px 8px;\n    border: 2px solid transparent;\n    height: fit-content;\n    width: fit-content;\n    margin-right: 0.5rem;\n    transition: all 0.3s linear;\n    text-decoration: none;\n    color: black;\n    cursor: none;\n    opacity: 1;\n    &:hover {\n        border: 2px solid black;\n    }\n`\n\nexport const IndexHeaderStyle = styled.div`\n    background-color: transparent;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: max-content;\n    display: flex;\n    flex-direction: row;\n    z-index: 99;\n    margin: 12px;\n`","import styled, { css } from 'styled-components'\n\nexport const MouseStyle = styled.div`\n    background-color: transparent;\n    height: 32px;\n    width: 32px;\n    border-radius: 50%;\n    border: 2px solid black;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    pointer-events: none;\n    opacity: 1;\n    transition: opacity 0.3s linear;\n    ${({ vanish }) => (vanish && css`\n        opacity: 0;\n    `)}\n    @media (max-width: 600px){\n        display: none;\n    }\n`","import { MouseStyle } from \"../styles/mousePointerStyle\"\nimport React, { useCallback } from \"react\"\nimport { useEffect, useState } from \"react\"\n\nexport default function MousePointer({ vanish }) {\n\n    const [x, setX] = useState(window.innerWidth / 2)\n    const [y, setY] = useState(window.innerHeight / 2)\n\n    const handleMouseMove = useCallback((e) => {\n        setX(e.pageX)\n        setY(e.pageY)\n    }, [])\n\n    useEffect(() => {\n        document.addEventListener('mousemove', handleMouseMove)\n        return () => { document.removeEventListener('mousemove', handleMouseMove) }\n    }, [handleMouseMove])\n\n    return (\n        <MouseStyle vanish={vanish} style={{ top: y, left: x }} />\n    )\n}","// Package imports\nimport React, { useCallback, useRef } from 'react'\nimport { useIntersectionRevealer } from 'react-intersection-revealer'\n\n// Styles\nimport { IndexContainerStyle } from './styles/indexContainerStyle'\nimport { IndexTextStyle } from './styles/indexTextStyle'\nimport { IndexTextStyle2 } from './styles/indexTextStyle2'\nimport { IndexBoxStyle } from './styles/indexBoxStyle'\nimport { GlobalStyle } from './styles/globalStyle'\nimport { Button, IndexHeaderStyle, PackageNameText, ButtonContainer } from './styles/indexHeaderStyle'\nimport { useEffect, useState } from 'react'\nimport MousePointer from './components/mousePointer'\n\nexport default function App() {\n  // Reference for the black box\n  const boxRef = useRef()\n\n  // Passing ref to hook and getting states\n  const { inView, heightVisible, x, y } = useIntersectionRevealer(boxRef)\n\n  // For demo\n  const [showStats, setShowStats] = useState(false)\n  const allowShowingStats = useCallback(() => {\n    setShowStats(true)\n    window.removeEventListener('scroll', allowShowingStats)\n  }, [])\n  useEffect(() => {\n    window.addEventListener('scroll', allowShowingStats)\n  }, [allowShowingStats])\n  useEffect(() => {\n    window.addEventListener('resize', allowShowingStats)\n  }, [allowShowingStats])\n\n  // For mouse pointer\n  const [vanish, setVanish] = useState(false)\n\n  // EXP\n  const refContainer = useRef()\n  const { scrollYProgress } = useIntersectionRevealer(refContainer)\n  useEffect(() => {\n    console.log(scrollYProgress)\n  }, [scrollYProgress])\n\n  return (\n    <>\n      <GlobalStyle />\n      <MousePointer vanish={vanish} />\n      <IndexHeaderStyle>\n        <PackageNameText>react-intersection-revealer</PackageNameText>\n        <ButtonContainer>\n          <Button onMouseEnter={() => { setVanish(true) }} onMouseLeave={() => { setVanish(false) }} href=\"https://github.com/captain-woof/react-intersection-revealer\" target=\"_blank\">\n            Github\n          </Button>\n          <Button onMouseEnter={() => { setVanish(true) }} onMouseLeave={() => { setVanish(false) }} href=\"https://github.com/captain-woof/react-intersection-revealer/blob/master/README.md\" target=\"_blank\">\n            README\n          </Button>\n        </ButtonContainer>\n      </IndexHeaderStyle>\n\n      <IndexTextStyle>\n        {showStats\n          ? <>\n            <div><b>Black box stats:</b></div>\n            <div>{`Rendered at (${Math.round(x)}px, ${Math.round(y)}px)`}</div>\n            <div>{`Visible: ${inView}`}</div>\n            <div>{`Visible height: ${Math.round(heightVisible)}px`}</div>\n          </>\n          : <div>Scroll or resize the window to see the black box's visibility stats</div>\n        }\n      </IndexTextStyle>\n\n      <IndexTextStyle2>\n        <div>{`You scrolled through ${Math.round(scrollYProgress * 100)}% of the 1st container`}</div>\n      </IndexTextStyle2>\n\n      <IndexContainerStyle ref={refContainer} bgColor=\"#C59cee\">\n        <IndexBoxStyle ref={boxRef} />\n      </IndexContainerStyle>\n\n      <IndexContainerStyle />\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}